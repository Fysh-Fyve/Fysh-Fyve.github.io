"use strict";(self.webpackChunk_fysh_fyve_source=self.webpackChunk_fysh_fyve_source||[]).push([[1],{4318:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>h});var t=s(6070),i=s(1503);const r={},o="\ud83e\udde0 Chapter 3: Fysh Logic and Operations",a={id:"fysh/manual/fysh-logic-and-operations",title:"\ud83e\udde0 Chapter 3: Fysh Logic and Operations",description:"\ud83e\udd14 Logical Operations",source:"@site/docs/fysh/02-manual/03-fysh-logic-and-operations.md",sourceDirName:"fysh/02-manual",slug:"/fysh/manual/fysh-logic-and-operations",permalink:"/docs/fysh/manual/fysh-logic-and-operations",draft:!1,unlisted:!1,editUrl:"https://github.com/Fysh-Fyve/fysh/tree/master/pkg/website/docs/fysh/02-manual/03-fysh-logic-and-operations.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docsSidebar",previous:{title:"\ud83d\udcca Chapter 2: Data Types",permalink:"/docs/fysh/manual/data-types"},next:{title:"\ud83d\udd04 Chapter 4: Control Structures",permalink:"/docs/fysh/manual/control-structures"}},l={},h=[{value:"\ud83e\udd14 Logical Operations",id:"-logical-operations",level:2},{value:"\ud83d\udd27 Bitwise Operations",id:"-bitwise-operations",level:2},{value:"\ud83d\udc38 Tadpoles",id:"-tadpoles",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"-chapter-3-fysh-logic-and-operations",children:"\ud83e\udde0 Chapter 3: Fysh Logic and Operations"}),"\n",(0,t.jsx)(n.h2,{id:"-logical-operations",children:"\ud83e\udd14 Logical Operations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"AND (&&)"}),", ",(0,t.jsx)(n.code,{children:"OR (||)"}),", and ",(0,t.jsx)(n.code,{children:"NOT (!!)"})]}),": Steven is experiencing an\nexistential crisis. They're questioning the very fabric of reality.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If steven is real ",(0,t.jsx)(n.code,{children:"and"})," they found the truth, they're happy. (Steven &&\ntheTruth)"]}),"\n",(0,t.jsxs)(n.li,{children:["Steven is happy if either they're real ",(0,t.jsx)(n.code,{children:"or"})," found the truth. (Steven ||\ntheTruth)"]}),"\n",(0,t.jsxs)(n.li,{children:["But then Steven thought about it and said \"hey it would be kinda cool if I\nwasn't real\" and is now only happy if they're ",(0,t.jsx)(n.code,{children:"not"})," real. (!!Steven)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fysh",children:"><steven> && ><TheTruth> ~\n><steven> || ><TheTruth> ~\n!! ><steven> ~\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-bitwise-operations",children:"\ud83d\udd27 Bitwise Operations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Steven is bored and looking to have their bits rearranged. At Fysh, we're\nhereto help! We have provided Steven with a variety of tools and bitwise\nmanipulations to satisfy their bit busting needs:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"AND (&)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"OR (|)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"XOR (^)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"NOT (!)"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fysh",children:"><steven> & ><(({\xb0> ~\n><steven> | ><(({\xb0> ~\n><steven> ^ ><(({\xb0> ~\n! ><steven> ~\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logical shifts:"})," Steven can also use logical shifts! Steven shifts their\nbits to the left then right by 1.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.strong,{children:["Left shift (",(0,t.jsx)(n.code,{children:"<<"}),"):"]})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.strong,{children:["Right shift (",(0,t.jsx)(n.code,{children:">>"}),"):"]})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fysh",children:"><steven> << ><(({\xb0> ~\n><steven> >> ><(({\xb0> ~\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-tadpoles",children:"\ud83d\udc38 Tadpoles"}),"\n",(0,t.jsxs)(n.p,{children:["Tadpoles are Fysh too. They swim towards bigger Fysh (they like the danger) and\nare represented by ",(0,t.jsx)(n.code,{children:"~o"})," or ",(0,t.jsx)(n.code,{children:"o~"}),". Here, we are checking if Steven is bigger than\n5 and less than 7, respectively."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fysh",children:"><//> Greater/Less than\n><steven> o~ ><{({\xb0>\n><steven> ~o ><{{{\xb0>\n\n><//> Greater/Less than or equal to (replace ~ with \u2248 or =)\n><steven> o= ><{({\xb0>\n><steven> \u2248o ><{{{\xb0>\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1503:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(758);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);